buildscript {
    repositories {
        jcenter()
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

//add dependency repositories
repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        url = "https://www.cursemaven.com"
    }
	maven {
		name = "CB Repo"
		url = "http://chickenbones.net/maven"
	}
	maven {
		name = "JEI Maven"
		url = "http://dvs1.progwml6.com/files/maven"
	}
    maven {
        name = "mcmoddev"
        url = "https://maven.mcmoddev.com"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name 'jitpack'
        url 'https://jitpack.io'
    }
    mavenCentral()
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'


group = "codechicken"
archivesBaseName = "EnderStorage"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}
// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

configurations {
    shade
    compile.extendsFrom(shade)
}

dependencies {
    compile files('libs/mcp-1.12.2-srg.zip')
    shade "com.github.MJaroslav.Reflectors:library:v4"
    compile "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:deobf"
	compile "mezz.jei:jei_${config.mc_version}:${config.jei_version}"
    deobfCompile "mekanism:Mekanism:${config.mc_version}:${config.mekanism_version}"
    deobfCompile "curse.maven:baubles-227083:2518667"
    deobfCompile "curse.maven:botania-225643:3330934"

}

version =  "${project.config.mod_version}"
println  config.mc_version + "-" + config.forge_version
// Setup the forge minecraft plugin data. Specify the preferred forge/minecraft version here
minecraft {
    version = config.mc_version + "-" + config.forge_version
    mappings = config.mappings
	makeObfSourceJar = false
    replace '${mod_version}', project.config.mod_version
	runDir = "run"
}

processResources {
    // Redo task if any of these properties change
    inputs.property "version", project.version
    inputs.property "mc_version", config.mc_version

    // Replace properties in info files
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'
        expand 'version':project.version,'mc_version':config.mc_version
    }

	// Move access transformer to META-INF
	rename '(.+_at.cfg)', 'META-INF/$1'
}
extractAnnotationsJar.enabled = false
version = "${project.minecraft.version}-${project.version}"

jar {
    configurations.shade.each { dep ->
        from project.zipTree(dep)
    }

    manifest.attributes(
            "Specification-Title": "enderstorage",
            "Specification-Vendor": "codechicken",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" : "codechicken",
            "FMLAT": "es_at.cfg",
            "FMLCorePlugin": "codechicken.enderstorage.reflection.ReflectorsPlugin",
            "FMLCorePluginContainsFMLMod": "true",
    )
}

//jar.finalizedBy('reobfJar')

